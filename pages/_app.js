import React, { useState } from 'react';
import GlobalStyle from '@/styles/global-style';
import Head from 'next/head';
import { Hydrate, QueryClient, QueryClientProvider } from 'react-query';
import { ReactQueryDevtools } from 'react-query/devtools';
import { RecoilRoot } from 'recoil';
import usePageLoading from '@/hooks/usePageLoading';
import GlobalSpinner from '@/components/global-spinner';
import styled from 'styled-components';
import Navigation from '@/components/navigation';

const App = ({ Component, pageProps }) => {
  const [queryClient] = useState(() => new QueryClient());
  const loading = usePageLoading();

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        {/* <meta name="viewport" content="width=device-width, initial-scale=1" /> */}
        <meta
          name="viewport"
          content="width=device-width, initial-scale=1, maximum-scale=1, minimum-scale=1, user-scalable=no"
        />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <GlobalStyle />

      <QueryClientProvider client={queryClient}>
        <Hydrate state={pageProps.dehydratedState}>
          <RecoilRoot>
            {loading ? (
              <SpinnerWrapper>
                <GlobalSpinner
                  width={18}
                  height={18}
                  marginRight={18}
                  dotColor="#8536FF"
                />
              </SpinnerWrapper>
            ) : (
              <>
                <Frame>
                  <Navigation />

                  <ComponentFrame>
                    <Component {...pageProps} />
                  </ComponentFrame>
                </Frame>
              </>
            )}
          </RecoilRoot>
        </Hydrate>

        <ReactQueryDevtools initialIsOpen={false} position="bottom-right" />
      </QueryClientProvider>
    </>
  );
};

export default App;

const Frame = styled.main`
  display: flex;
  align-items: center;
  flex-direction: column;

  padding-left: 6rem;
  padding-right: 6rem;

  max-width: 120rem;
  min-height: 100vh;
  margin: 0 auto;

  @media screen and (max-width: 500px) {
    max-width: 100%;
    padding: 0rem 1.6rem 0rem 1.6rem;
  }
`;

const ComponentFrame = styled.div`
  padding-top: 12rem;
`;

const SpinnerWrapper = styled.div`
  height: 100vh;
  display: flex;
  justify-content: center;
  align-items: center;
`;
